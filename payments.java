/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package aitechs_cms_copy;


import java.awt.Desktop;
import java.sql.SQLException;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import java.sql.*;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.UUID;
/**
 *
 * @author Lenovo
 */
public class payments extends javax.swing.JFrame {
 
   
   public payments() {
        initComponents();

           // Auto-fill logged-in student info
        student s = session.loggedInStudent;
        
        if (s != null) {
            txtEmail.setText(s.getEmail());
            txtName.setText(s.getName());      
    }
         txtAmount.setText("0.00");
        lblinvoice1.setText(generateInvoiceNumber());

//        loadPayments();
   }
  
   // Generate unique invoice number
    private String generateInvoiceNumber() {
        return "INV-" + UUID.randomUUID().toString().substring(0, 8).toUpperCase();
    }

   
    /**
     * Creates new form payments
     */
    



    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel4 = new javax.swing.JPanel();
        navigationPanel = new javax.swing.JPanel();
        btnNavProfile = new javax.swing.JButton();
        btnLogout = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        btnNavClearance = new javax.swing.JButton();
        btnPayment = new javax.swing.JButton();
        profilePanel = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        lblStudentName = new javax.swing.JLabel();
        lblinvoice = new javax.swing.JLabel();
        lblAmount = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        btnPay = new javax.swing.JButton();
        lblOfficerName = new javax.swing.JLabel();
        lblMethod = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        txtAmount = new javax.swing.JTextField();
        txtOfficerName = new javax.swing.JTextField();
        cbMethod = new javax.swing.JComboBox<>();
        lblStudentName1 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        lblinvoice1 = new javax.swing.JLabel();
        chkUniform = new javax.swing.JCheckBox();
        chkID = new javax.swing.JCheckBox();
        chkMemFee = new javax.swing.JCheckBox();
        btnTotal = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        ReceiptArea = new javax.swing.JTextArea();
        btnPrint = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel4.setBackground(new java.awt.Color(245, 247, 250));
        jPanel4.setPreferredSize(new java.awt.Dimension(1366, 768));

        navigationPanel.setBackground(new java.awt.Color(44, 62, 80));
        navigationPanel.setPreferredSize(new java.awt.Dimension(200, 768));

        btnNavProfile.setText("Profile");
        btnNavProfile.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnNavProfile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNavProfileActionPerformed(evt);
            }
        });

        btnLogout.setBackground(new java.awt.Color(44, 62, 80));
        btnLogout.setForeground(new java.awt.Color(245, 247, 250));
        btnLogout.setText("LOGOUT");
        btnLogout.setBorder(null);
        btnLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogoutActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(245, 247, 250));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("PAYMENT");

        btnNavClearance.setText("Clearance");
        btnNavClearance.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnNavClearance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNavClearanceActionPerformed(evt);
            }
        });

        btnPayment.setText("Payment");
        btnPayment.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnPayment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPaymentActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout navigationPanelLayout = new javax.swing.GroupLayout(navigationPanel);
        navigationPanel.setLayout(navigationPanelLayout);
        navigationPanelLayout.setHorizontalGroup(
            navigationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(navigationPanelLayout.createSequentialGroup()
                .addGroup(navigationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(navigationPanelLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(navigationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnNavProfile, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(navigationPanelLayout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(17, 17, 17))
                            .addComponent(btnNavClearance, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnPayment, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(navigationPanelLayout.createSequentialGroup()
                        .addGap(80, 80, 80)
                        .addComponent(btnLogout)))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        navigationPanelLayout.setVerticalGroup(
            navigationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(navigationPanelLayout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(jLabel2)
                .addGap(89, 89, 89)
                .addComponent(btnNavProfile, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnNavClearance, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnPayment, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnLogout)
                .addGap(37, 37, 37))
        );

        profilePanel.setBackground(new java.awt.Color(245, 247, 250));
        profilePanel.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        profilePanel.setPreferredSize(new java.awt.Dimension(1161, 635));

        jPanel1.setBackground(new java.awt.Color(44, 62, 80));
        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        lblStudentName.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblStudentName.setForeground(new java.awt.Color(245, 247, 250));
        lblStudentName.setText("Student Email:");

        lblinvoice.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblinvoice.setForeground(new java.awt.Color(245, 247, 250));
        lblinvoice.setText("Invoice Number:");

        lblAmount.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblAmount.setForeground(new java.awt.Color(245, 247, 250));
        lblAmount.setText("Total Amount:");

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(245, 247, 250));
        jLabel1.setText("PAYMENT");
        jLabel1.setToolTipText("");

        btnPay.setText("PAY");
        btnPay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPayActionPerformed(evt);
            }
        });

        lblOfficerName.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblOfficerName.setForeground(new java.awt.Color(245, 247, 250));
        lblOfficerName.setText("Officer Name:");

        lblMethod.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblMethod.setForeground(new java.awt.Color(245, 247, 250));
        lblMethod.setText("Payment Method:");

        txtEmail.setText(" ");

        txtAmount.setText(" ");

        txtOfficerName.setText(" ");

        cbMethod.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Cash", "GCash", "Bank Transfer" }));

        lblStudentName1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblStudentName1.setForeground(new java.awt.Color(245, 247, 250));
        lblStudentName1.setText("Student Name:");

        txtName.setText(" ");

        lblinvoice1.setBackground(new java.awt.Color(255, 255, 255));
        lblinvoice1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblinvoice1.setForeground(new java.awt.Color(255, 255, 255));
        lblinvoice1.setText(" ");

        chkUniform.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        chkUniform.setForeground(new java.awt.Color(245, 247, 250));
        chkUniform.setText("Uniform(650.00)");

        chkID.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        chkID.setForeground(new java.awt.Color(245, 247, 250));
        chkID.setText("ID Lace(100.00)");

        chkMemFee.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        chkMemFee.setForeground(new java.awt.Color(245, 247, 250));
        chkMemFee.setText("Membership Fee(350.00)");
        chkMemFee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkMemFeeActionPerformed(evt);
            }
        });

        btnTotal.setText("Total");
        btnTotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTotalActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(63, 63, 63)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblStudentName1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lblOfficerName)
                                .addComponent(lblMethod)
                                .addComponent(lblAmount))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(lblStudentName)
                                .addGap(25, 25, 25)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(chkUniform)
                                    .addComponent(chkID)
                                    .addComponent(chkMemFee))
                                .addGap(99, 99, 99))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addGap(60, 60, 60)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtOfficerName, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txtEmail, javax.swing.GroupLayout.DEFAULT_SIZE, 261, Short.MAX_VALUE)
                                        .addComponent(txtName, javax.swing.GroupLayout.DEFAULT_SIZE, 261, Short.MAX_VALUE))
                                    .addComponent(cbMethod, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(btnPay, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 15, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(lblinvoice)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblinvoice1, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(70, 70, 70)
                        .addComponent(jLabel1)
                        .addGap(20, 20, 20))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnTotal))
                        .addGap(46, 46, 46))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(61, 61, 61))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblinvoice1)
                            .addComponent(lblinvoice))
                        .addGap(56, 56, 56)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblStudentName1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblStudentName)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblOfficerName)
                    .addComponent(txtOfficerName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbMethod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblMethod))
                .addGap(38, 38, 38)
                .addComponent(chkUniform)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chkID)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chkMemFee)
                .addGap(4, 4, 4)
                .addComponent(btnTotal)
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblAmount))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 58, Short.MAX_VALUE)
                .addComponent(btnPay)
                .addGap(41, 41, 41))
        );

        ReceiptArea.setColumns(20);
        ReceiptArea.setRows(5);
        jScrollPane2.setViewportView(ReceiptArea);

        btnPrint.setText("Print Receipt");
        btnPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrintActionPerformed(evt);
            }
        });

        jLabel3.setText("Receipt");

        javax.swing.GroupLayout profilePanelLayout = new javax.swing.GroupLayout(profilePanel);
        profilePanel.setLayout(profilePanelLayout);
        profilePanelLayout.setHorizontalGroup(
            profilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(profilePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(profilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(profilePanelLayout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 430, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(profilePanelLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3))
                    .addGroup(profilePanelLayout.createSequentialGroup()
                        .addGap(374, 374, 374)
                        .addComponent(btnPrint)))
                .addContainerGap(119, Short.MAX_VALUE))
        );
        profilePanelLayout.setVerticalGroup(
            profilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(profilePanelLayout.createSequentialGroup()
                .addGroup(profilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(profilePanelLayout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(jLabel3)
                        .addGap(12, 12, 12)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnPrint))
                    .addGroup(profilePanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(555, Short.MAX_VALUE))
        );

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/aitechs_cms_copy/finalHeader.png"))); // NOI18N
        jLabel4.setMaximumSize(new java.awt.Dimension(1366, 160));
        jLabel4.setMinimumSize(new java.awt.Dimension(1366, 160));
        jLabel4.setPreferredSize(new java.awt.Dimension(1161, 160));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addComponent(navigationPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(profilePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(navigationPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 1260, Short.MAX_VALUE)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(profilePanel, javax.swing.GroupLayout.DEFAULT_SIZE, 1094, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 1379, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, 1260, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

      
    private void savePayment() {
    String name = txtName.getText().trim();
    String email = txtEmail.getText().trim();
    String invoice = lblinvoice1.getText().trim();
    String officer = txtOfficerName.getText().trim();
    
    boolean uniformPaid = chkUniform.isSelected();
    boolean idPaid = chkID.isSelected();
    boolean membershipFeePaid = chkMemFee.isSelected();

    // Validate at least one payment item is selected
    if (!uniformPaid && !idPaid && !membershipFeePaid) {
        JOptionPane.showMessageDialog(this, "Please select at least one payment item.");
        return;
    }

    // Validate required fields
    if (name.isEmpty() || email.isEmpty() || officer.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Please fill in all fields.");
        return;
    }

    // Calculate amount
    double amount = 0.0;
    if (uniformPaid) amount += 650.0;
    if (idPaid) amount += 100.0;
    if (membershipFeePaid) amount += 350.0;

    String method = cbMethod.getSelectedItem().toString();
    String status = "Paid"; // Simplified status
    
    try (Connection conn = DbConnection.getConnection()) {
        // Check for duplicate payment
        String checkSql = "SELECT * FROM payed WHERE student_email = ? AND method = ? AND status = 'Paid'";
        try (PreparedStatement checkStmt = conn.prepareStatement(checkSql)) {
            checkStmt.setString(1, email);
            checkStmt.setString(2, method);
            try (ResultSet rs = checkStmt.executeQuery()) {
                if (rs.next()) {
                    int confirm = JOptionPane.showConfirmDialog(this,
                            "This payment method was already used by the student. Proceed anyway?",
                            "Duplicate Warning",
                            JOptionPane.YES_NO_OPTION);
                    if (confirm != JOptionPane.YES_OPTION) return;
                }
            }
        }

        // Insert payment record
        String query = "INSERT INTO payed (invoice_number, student_name, student_email, amount, method, "
                     + "officer_name, status, payment_date, uniform_paid, idlace_paid, memfee_paid) "
                     + "VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";
        
        try (PreparedStatement pst = conn.prepareStatement(query)) {
            pst.setString(1, invoice);
            pst.setString(2, name);
            pst.setString(3, email);
            pst.setDouble(4, amount);
            pst.setString(5, method);
            pst.setString(6, officer);
            pst.setString(7, status);
            pst.setTimestamp(8, new Timestamp(System.currentTimeMillis()));
            pst.setString(9, uniformPaid ? "Paid" : "Unpaid");
            pst.setString(10, idPaid ? "Paid" : "Unpaid");
            pst.setString(11, membershipFeePaid ? "Paid" : "Unpaid");
            
            pst.executeUpdate();
        }

        // Update clearance_requests
        String updateClearance = "UPDATE clearance_requests SET payment_status = 'Paid' "
                              + "WHERE student_name = ? AND status = 'Accepted'";
        try (PreparedStatement pst2 = conn.prepareStatement(updateClearance)) {
            pst2.setString(1, name);
            pst2.executeUpdate();
        }

        // Generate receipt
        txtAmount.setText(String.format("%.2f", amount));
        ReceiptArea.setText(String.format("""
            ========== Clearance Payment ==========
            Invoice Number  : %s
            Date            : %s
            Student Email   : %s
            Amount          : ₱%.2f
            Method          : %s
            Received By     : %s
            Status          : PAID
            =======================================
            """, invoice, 
            LocalDateTime.now().format(DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss")),
            email, amount, method, officer));

        lblinvoice1.setText(generateInvoiceNumber());

        // Show success message with option to print
        int option = JOptionPane.showOptionDialog(
            this,
            "Payment recorded successfully!\nWould you like to print the receipt now?",
            "Payment Successful",
            JOptionPane.YES_NO_OPTION,
            JOptionPane.INFORMATION_MESSAGE,
            null,
            new Object[]{"Print Receipt", "Later"},
            "Print Receipt"
        );

        if (option == JOptionPane.YES_OPTION) {
            printReceipt();
        }

    } catch (SQLException ex) {
        ex.printStackTrace();
        JOptionPane.showMessageDialog(this, 
            "Failed to save payment: " + ex.getMessage() + 
            "\nPlease verify all data fits column requirements.");
    }
}
    
//    private void loadPayments() {
//        try (Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/aitechs_cms_db", "root", "");
//             PreparedStatement pst = conn.prepareStatement("SELECT invoice_number, student_email, student_name, amount, method, status, payment_date, officer_name FROM payed");
//             ResultSet rs = pst.executeQuery()) {
//
//            DefaultTableModel model = (DefaultTableModel) tblPaymentHistory.getModel();
//            model.setRowCount(0);
//
//            while (rs.next()) {
//                model.addRow(new Object[]{
//                        rs.getString("invoice_number"),
//                        rs.getString("student_email"),
//                        rs.getString("student_name"),
//                        rs.getDouble("amount"),
//                        rs.getString("method"),
//                        rs.getString("status"),
//                        rs.getTimestamp("payment_date"),
//                        rs.getString("officer_name")
//                });
//            }
//
//        } catch (SQLException ex) {
//            ex.printStackTrace();
//            JOptionPane.showMessageDialog(this, "Failed to load payments.");
//        }
//    }
//    
    private void printReceipt() {
        try {
            File file = exportReceiptToDoc();
            if (Desktop.isDesktopSupported()) {
                Desktop.getDesktop().print(file);
            } else {
                JOptionPane.showMessageDialog(this, "Desktop printing not supported.");
            }
        } catch (IOException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Failed to print receipt.");
        }
    }

    private File exportReceiptToDoc() throws IOException {
        File file = new File("Receipt_" + lblinvoice1.getText() + ".doc");
        try (BufferedWriter writer = new BufferedWriter(new FileWriter(file))) {
            writer.write(ReceiptArea.getText());
        }
        return file;
    }

    // Static method to update payment status for a student
public static void updatePaymentStatus(String studentEmail, String newStatus) {
    // Validate status length
    if (newStatus.length() > 50) {
        JOptionPane.showMessageDialog(null, "Status value is too long (max 50 characters)");
        return;
    }
    
    try (Connection conn = DbConnection.getConnection()) {
        String updateQuery = "UPDATE payed SET status = ? WHERE student_email = ?";
        try (PreparedStatement stmt = conn.prepareStatement(updateQuery)) {
            stmt.setString(1, newStatus);
            stmt.setString(2, studentEmail);

            int rowsAffected = stmt.executeUpdate();
            if (rowsAffected == 0) {
                JOptionPane.showMessageDialog(null, "No payment found for: " + studentEmail);
            }
        }
    } catch (SQLException ex) {
        ex.printStackTrace();
        JOptionPane.showMessageDialog(null, 
            "Error updating payment status: " + ex.getMessage() +
            "\nPossible issue: Status value too long or invalid data");
    }
}


    private void btnNavProfileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNavProfileActionPerformed
//        new paymentEme().setVisible(true);
//     this.dispose();
    }//GEN-LAST:event_btnNavProfileActionPerformed

    private void btnLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogoutActionPerformed
        new login().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnLogoutActionPerformed

    private void btnNavClearanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNavClearanceActionPerformed
        // TODO add your handling code here:
        new clearance1().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnNavClearanceActionPerformed

    private void btnPaymentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPaymentActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnPaymentActionPerformed

    private void btnPayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPayActionPerformed
        if (!chkUniform.isSelected() && !chkID.isSelected() && !chkMemFee.isSelected()) {
    JOptionPane.showMessageDialog(this, "Please select at least one payment item.");
    return;
}
        savePayment();
    }//GEN-LAST:event_btnPayActionPerformed

    private void btnPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrintActionPerformed
    printReceipt();
    }//GEN-LAST:event_btnPrintActionPerformed

    private void chkMemFeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkMemFeeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chkMemFeeActionPerformed

    private void btnTotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTotalActionPerformed
        double total = 0.0;
    if (chkUniform.isSelected()) total += 650.0;
    if (chkID.isSelected()) total += 100.0;
    if (chkMemFee.isSelected()) total += 350.0;
    txtAmount.setText(String.format("%.2f", total));
    }//GEN-LAST:event_btnTotalActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(payments.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(payments.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(payments.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(payments.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new payments().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea ReceiptArea;
    private javax.swing.JButton btnLogout;
    private javax.swing.JButton btnNavClearance;
    private javax.swing.JButton btnNavProfile;
    private javax.swing.JButton btnPay;
    private javax.swing.JButton btnPayment;
    private javax.swing.JButton btnPrint;
    private javax.swing.JButton btnTotal;
    private javax.swing.JComboBox<String> cbMethod;
    private javax.swing.JCheckBox chkID;
    private javax.swing.JCheckBox chkMemFee;
    private javax.swing.JCheckBox chkUniform;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblAmount;
    private javax.swing.JLabel lblMethod;
    private javax.swing.JLabel lblOfficerName;
    private javax.swing.JLabel lblStudentName;
    private javax.swing.JLabel lblStudentName1;
    private javax.swing.JLabel lblinvoice;
    private javax.swing.JLabel lblinvoice1;
    private javax.swing.JPanel navigationPanel;
    private javax.swing.JPanel profilePanel;
    private javax.swing.JTextField txtAmount;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtOfficerName;
    // End of variables declaration//GEN-END:variables

   
   
}
